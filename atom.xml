<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Marvin&#39;s</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-14T16:18:07.063Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Puwen Ma</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java基础-集合</title>
    <link href="http://yoursite.com/2019/06/12/Java%E5%9F%BA%E7%A1%80-%E9%9B%86%E5%90%88/"/>
    <id>http://yoursite.com/2019/06/12/Java基础-集合/</id>
    <published>2019-06-11T21:13:03.000Z</published>
    <updated>2019-06-14T16:18:07.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Java集合简介："><a href="#一、Java集合简介：" class="headerlink" title="一、Java集合简介："></a>一、Java集合简介：</h2><ul><li><p>Set：无序、不可重复</p></li><li><p>List：有序、重复的</p></li><li><p>Map：具有映射关系</p></li><li><p>Queue：队列集合实现</p></li></ul><h3 id="1-集合与数组的区别："><a href="#1-集合与数组的区别：" class="headerlink" title="1. 集合与数组的区别："></a>1. 集合与数组的区别：</h3><ul><li><p>数组长度在初始化时指定，意味着只能保存定长的数据。而集合可以保存数量不确定的数据。同时可以保存具有映射关系的数据（即关联数组，键值对 key-value）。</p></li><li><p>数组元素即可以是基本类型的值，也可以是对象。集合里只能保存对象（实际上只是保存对象的引用变量），基本数据类型的变量要转换成对应的包装类才能放入集合类中。</p></li></ul><h3 id="2-Java集合类之间的继承关系"><a href="#2-Java集合类之间的继承关系" class="headerlink" title="2. Java集合类之间的继承关系:"></a>2. Java集合类之间的继承关系:</h3><ul><li><p>Java的集合类主要由两个接口派生而出:</p><ul><li><p>Collection</p><p><img src="../img/20190612-0/3985563-e7febf364d8d8235-1.png" alt="Collection Img"></p></li><li><p>Map (key-value具有映射关系的集合)</p><p><img src="../img/20190612-0/3985563-06052107849a7603-2.png" alt="Map Img"></p></li></ul></li></ul><h2 id="二、Collection接口："><a href="#二、Collection接口：" class="headerlink" title="二、Collection接口："></a>二、Collection接口：</h2><h3 id="1-简介："><a href="#1-简介：" class="headerlink" title="1. 简介："></a>1. 简介：</h3><pre><code>Collection接口是Set,Queue,List的父接口。</code></pre><h4 id="1-1-接口中定义的方法"><a href="#1-1-接口中定义的方法" class="headerlink" title="1.1. 接口中定义的方法"></a>1.1. 接口中定义的方法</h4><p><img src="../img/20190612-0/3985563-414332ffe4733274-3.png" alt="Collection Function Img"></p><p><strong><em>注：重点看iterator()方法</em></strong></p><h4 id="1-2-使用Iterator遍历集合元素"><a href="#1-2-使用Iterator遍历集合元素" class="headerlink" title="1.2. 使用Iterator遍历集合元素"></a>1.2. 使用Iterator遍历集合元素</h4><pre><code>Iterator接口经常被称作迭代器，它是Collection接口的父接口。但Iterator主要用于遍历集合中的元素。 Iterator接口中主要定义了2个方法：</code></pre><p><img src="../img/20190612-0/3985563-63737a2d81713a47-4.png" alt="Iterator Img"></p><p>使用迭代器遍历集合：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建集合</span></span><br><span class="line">    Collection&lt;Integer&gt; collection = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i ++) &#123;</span><br><span class="line">        collection.add(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得集合的迭代器</span></span><br><span class="line">    Iterator iterator = collection.iterator();</span><br><span class="line">    <span class="keyword">while</span> (iterator.hasNext()) &#123; <span class="comment">//判断是否存在下一个元素</span></span><br><span class="line">        <span class="comment">//取出元素并打印</span></span><br><span class="line">        System.out.println(iterator.next() + <span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注：</strong>当使用Iterator对集合元素进行迭代时，把集合元素的值传给了迭代变量，<strong>基本数据类型</strong>传递的是<strong>值</strong>。<strong>引用类型</strong>传递的仅仅是对象的<strong>引用变量</strong>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、Java集合简介：&quot;&gt;&lt;a href=&quot;#一、Java集合简介：&quot; class=&quot;headerlink&quot; title=&quot;一、Java集合简介：&quot;&gt;&lt;/a&gt;一、Java集合简介：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Set：无序、不可重复&lt;/p&gt;
&lt;/li&gt;
&lt;li
      
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="基础" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="开发" scheme="http://yoursite.com/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
