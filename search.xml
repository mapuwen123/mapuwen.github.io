<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java基础-集合]]></title>
    <url>%2F2019%2F06%2F12%2FJava%E5%9F%BA%E7%A1%80-%E9%9B%86%E5%90%88%2F</url>
    <content type="text"><![CDATA[一、Java集合简介： Set：无序、不可重复 List：有序、重复的 Map：具有映射关系 Queue：队列集合实现 1. 集合与数组的区别： 数组长度在初始化时指定，意味着只能保存定长的数据。而集合可以保存数量不确定的数据。同时可以保存具有映射关系的数据（即关联数组，键值对 key-value）。 数组元素即可以是基本类型的值，也可以是对象。集合里只能保存对象（实际上只是保存对象的引用变量），基本数据类型的变量要转换成对应的包装类才能放入集合类中。 2. Java集合类之间的继承关系: Java的集合类主要由两个接口派生而出: Collection Map (key-value具有映射关系的集合) 二、Collection接口：1. 简介：Collection接口是Set,Queue,List的父接口。1.1. 接口中定义的方法 注：重点看iterator()方法 1.2. 使用Iterator遍历集合元素Iterator接口经常被称作迭代器，它是Collection接口的父接口。但Iterator主要用于遍历集合中的元素。 Iterator接口中主要定义了2个方法： 使用迭代器遍历集合： 1234567891011121314public static void main(String[] args) &#123; //创建集合 Collection&lt;Integer&gt; collection = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; 10; i ++) &#123; collection.add(i); &#125; //获得集合的迭代器 Iterator iterator = collection.iterator(); while (iterator.hasNext()) &#123; //判断是否存在下一个元素 //取出元素并打印 System.out.println(iterator.next() + ""); &#125;&#125; 注：当使用Iterator对集合元素进行迭代时，把集合元素的值传给了迭代变量，基本数据类型传递的是值。引用类型传递的仅仅是对象的引用变量。]]></content>
      <tags>
        <tag>java</tag>
        <tag>基础</tag>
        <tag>开发</tag>
      </tags>
  </entry>
</search>
